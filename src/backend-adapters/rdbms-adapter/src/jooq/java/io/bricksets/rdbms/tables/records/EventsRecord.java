/*
 * This file is generated by jOOQ.
 */
package io.bricksets.rdbms.tables.records;


import io.bricksets.rdbms.tables.Events;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventsRecord extends UpdatableRecordImpl<EventsRecord> implements Record5<UUID, Long, LocalDateTime, String, JSONB> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sandbox.events.id</code>.
     */
    public EventsRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>sandbox.events.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>sandbox.events.position</code>.
     */
    public EventsRecord setPosition(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>sandbox.events.position</code>.
     */
    public Long getPosition() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>sandbox.events.occurred_on</code>.
     */
    public EventsRecord setOccurredOn(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>sandbox.events.occurred_on</code>.
     */
    public LocalDateTime getOccurredOn() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>sandbox.events.event_class</code>.
     */
    public EventsRecord setEventClass(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>sandbox.events.event_class</code>.
     */
    public String getEventClass() {
        return (String) get(3);
    }

    /**
     * Setter for <code>sandbox.events.event_value</code>.
     */
    public EventsRecord setEventValue(JSONB value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>sandbox.events.event_value</code>.
     */
    public JSONB getEventValue() {
        return (JSONB) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, Long, LocalDateTime, String, JSONB> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, Long, LocalDateTime, String, JSONB> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Events.EVENTS.ID;
    }

    @Override
    public Field<Long> field2() {
        return Events.EVENTS.POSITION;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Events.EVENTS.OCCURRED_ON;
    }

    @Override
    public Field<String> field4() {
        return Events.EVENTS.EVENT_CLASS;
    }

    @Override
    public Field<JSONB> field5() {
        return Events.EVENTS.EVENT_VALUE;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getPosition();
    }

    @Override
    public LocalDateTime component3() {
        return getOccurredOn();
    }

    @Override
    public String component4() {
        return getEventClass();
    }

    @Override
    public JSONB component5() {
        return getEventValue();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getPosition();
    }

    @Override
    public LocalDateTime value3() {
        return getOccurredOn();
    }

    @Override
    public String value4() {
        return getEventClass();
    }

    @Override
    public JSONB value5() {
        return getEventValue();
    }

    @Override
    public EventsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public EventsRecord value2(Long value) {
        setPosition(value);
        return this;
    }

    @Override
    public EventsRecord value3(LocalDateTime value) {
        setOccurredOn(value);
        return this;
    }

    @Override
    public EventsRecord value4(String value) {
        setEventClass(value);
        return this;
    }

    @Override
    public EventsRecord value5(JSONB value) {
        setEventValue(value);
        return this;
    }

    @Override
    public EventsRecord values(UUID value1, Long value2, LocalDateTime value3, String value4, JSONB value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventsRecord
     */
    public EventsRecord() {
        super(Events.EVENTS);
    }

    /**
     * Create a detached, initialised EventsRecord
     */
    public EventsRecord(UUID id, Long position, LocalDateTime occurredOn, String eventClass, JSONB eventValue) {
        super(Events.EVENTS);

        setId(id);
        setPosition(position);
        setOccurredOn(occurredOn);
        setEventClass(eventClass);
        setEventValue(eventValue);
    }
}
